security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        App\Security\UserIdentity:
            algorithm: argon2i



    providers:
        # used to reload user from session & other features (e.g. switch_user)
        fetcher:
            id: App\Security\UserProvider

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            user_checker: App\Security\UserChecker
#            guard:
#                authenticators:
#                    - App\Security\LoginFormAuthenticator
#                    - App\Security\OAuth\FacebookAuthenticator
#                entry_point: App\Security\LoginFormAuthenticator

            custom_authenticators:
                - App\Security\LoginFormAuthenticator
                - App\Security\OAuth\FacebookAuthenticator
            entry_point: App\Security\LoginFormAuthenticator

            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

            form_login: true
            logout:
                path:   app_logout

    role_hierarchy:
        ROLE_ADMIN:
            - ROLE_USER
            - ROLE_MANAGE_USERS
            - ROLE_WORK_MANAGE_MEMBERS

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
#        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/oauth, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/signup, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/reset, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/users, roles: ROLE_MANAGE_USERS }
#        - { path: ^/, roles: ROLE_USER }

        - { path: ^/login, roles: PUBLIC_ACCESS }
        - { path: ^/oauth, roles: PUBLIC_ACCESS }
        - { path: ^/signup, roles: PUBLIC_ACCESS }
        - { path: ^/reset, roles: PUBLIC_ACCESS }
        - { path: ^/users, roles: ROLE_USER }
        - { path: ^/, roles: ROLE_USER }
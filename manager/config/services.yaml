# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    Finesse\SwiftMailerDefaultsPlugin\SwiftMailerDefaultsPlugin:
        arguments:
            $defaults:
                from:
                    '%env(MAILER_FROM_EMAIL)%': '%env(MAILER_FROM_NAME)%'
        tags:
            - { name: swiftmailer.default.plugin }

    App\Model\User\Service\ResetTokenizer:
        factory: ['App\Container\Model\User\Service\ResetTokenizerFactory', 'create']
        arguments: ['PT1H']

#    Redis:
#        # you can also use \RedisArray, \RedisCluster or \Predis\Client classes
#        class: Redis
#        calls:
#            - connect:
#                  - '%env(REDIS_HOST)%'
#                  - '%env(int:REDIS_PORT)%'
#
#            # uncomment the following if your Redis server requires a password
#            - auth:
#                  - '%env(REDIS_PASSWORD)%'
#
#    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
#        arguments:
#            - '@Redis'
#            # you can optionally pass an array of options. The only options are 'prefix' and 'ttl',
#            # which define the prefix to use for the keys to avoid collision on the Redis server
#            # and the expiration time for any given entry (in seconds), defaults are 'sf_s' and null:
#            # - { 'prefix': 'my_prefix', 'ttl': 600 }


    Predis\Client:
        arguments:
            - '%env(REDIS_URL)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Predis\Client'

    App\Security\AuthListener:
        arguments: [ '@security.token_storage', '@security.authentication.manager' ]
